on:
  workflow_call:
    inputs:
      release-tag-name:
        required: true
        type: string
      push:
        required: true
        type: boolean
      release:
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository_owner }}

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  dapper-build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-24.04
          architecture: amd64
        - os: ubuntu-24.04-arm
          architecture: arm64
        - os: ubuntu-24.04-arm
          architecture: arm/v7
    runs-on: ${{ matrix.os }}
    env:
      DAPPER_HOST_ARCH: ${{ matrix.architecture }}
    steps:
      - name: Free up space on build host
        run: rm -rf /opt/hostedtoolcache

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Log into GitHub Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Set up Qemu
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Run dapper
        run: make ci

      - name: Docker build
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/${{ matrix.architecture }}
          file: package/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ inputs.push }}

      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ inputs.push }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.push.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: digests-linux-${{ ( matrix.architecture == 'arm/v7' && 'arm') || matrix.architecture }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Prepare artifacts for the release
        if: ${{ startsWith(github.ref, 'refs/tags/') && fromJSON(inputs.release) }}
        run: |
          cd dist/artifacts
          sha256sum k3os-* > sha256sum-${{ ( matrix.architecture == 'arm/v7' && 'arm') || matrix.architecture }}.txt

      - name: Upload artifacts for arch
        if: ${{ startsWith(github.ref, 'refs/tags/') && fromJSON(inputs.release) }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: binaries-${{ ( matrix.architecture == 'arm/v7' && 'arm') || matrix.architecture }}
          path: ./dist/artifacts/
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge platforms
    runs-on: ubuntu-24.04
    needs: dapper-build
    steps:
      - name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ${{ runner.temp }}/digests/
          pattern: digests-*
          merge-multiple: true

      - name: Log into GitHub Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Get Docker Metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        if: ${{ inputs.push }}
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ github.repository }}@sha256:%s ' *)

      - name: Inspect Image
        if: ${{ inputs.push }}
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ github.repository }}:${{ steps.meta.outputs.version }}

      - name: Checkout code
        if: ${{ startsWith(github.ref, 'refs/tags/') && fromJSON(inputs.release) }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download binaries for release
        if: ${{ startsWith(github.ref, 'refs/tags/') && fromJSON(inputs.release) }}
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ./dist/artifacts/
          pattern: binaries-*
          merge-multiple: true

      - name: Publish binaries for the release
        if: ${{ startsWith(github.ref, 'refs/tags/') && fromJSON(inputs.release) }}
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          files: ./dist/artifacts/*
